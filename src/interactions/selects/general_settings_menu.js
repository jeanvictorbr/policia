import { EmbedBuilder, ActionRowBuilder, StringSelectMenuBuilder, ButtonBuilder, ButtonStyle } from 'discord.js';

// Fun√ß√£o para gerar a tela de sele√ß√£o de tipo de cargo (para evitar repetir c√≥digo)
function createRoleTypeSelection() {
    const embed = new EmbedBuilder()
        .setColor(0x2B2D31)
        .setTitle('üîó Vincula√ß√£o de Cargos')
        .setDescription('Selecione qual cargo funcional voc√™ deseja configurar. O bot usar√° essa informa√ß√£o para automatizar processos como recrutamento e promo√ß√µes.');

    const menu = new ActionRowBuilder()
        .addComponents(
            new StringSelectMenuBuilder()
                .setCustomId('role_type_select')
                .setPlaceholder('Selecione o tipo de cargo para configurar...')
                .addOptions(
                    {
                        label: 'Cargo de Aluno/Recruta',
                        description: 'Cargo padr√£o que um membro recebe ao ser aprovado no alistamento.',
                        value: 'recruit_role_id',
                        emoji: 'üéì'
                    },
                    {
                        label: 'Cargo de Recrutador',
                        description: 'Membros com este cargo (ou superior) aparecer√£o na lista de recrutadores.',
                        value: 'recruiter_role_id',
                        emoji: 'üëÆ'
                    }
                )
        );
    
    const backButton = new ActionRowBuilder()
        .addComponents(
            new ButtonBuilder()
                .setCustomId('main_menu') // Bot√£o para voltar ao menu principal do painel
                .setLabel('Voltar ao Menu Principal')
                .setStyle(ButtonStyle.Secondary)
                .setEmoji('‚¨ÖÔ∏è')
        );

    return { embeds: [embed], components: [menu, backButton], ephemeral: true };
}


export default {
    key: 'general_settings_menu',
    async execute(interaction) {
        const selectedValue = interaction.values[0];

        if (selectedValue === 'set_channels') {
            // L√≥gica de canais (j√° existente)
            // ... (o c√≥digo anterior para 'set_channels' permanece aqui)
            const embed = new EmbedBuilder().setColor(0x0099FF).setTitle('üì∫ Configura√ß√£o de Canais').setDescription('Qual tipo de canal voc√™ deseja configurar?');
            const menu = new ActionRowBuilder().addComponents(new StringSelectMenuBuilder().setCustomId('channel_type_select').setPlaceholder('Selecione o tipo de canal...').addOptions({ label: 'Canal de Alistamento', value: 'recruitment_channel_id' },{ label: 'Canal de An√°lises de Fichas', value: 'analysis_channel_id' },{ label: 'Canal de Promo√ß√µes', value: 'promotions_channel_id' },{ label: 'Canal de Relat√≥rios de A√ß√£o', value: 'reports_channel_id' }));
            const backButton = new ActionRowBuilder().addComponents(new ButtonBuilder().setCustomId('config_gerais').setLabel('Voltar').setStyle(ButtonStyle.Secondary).setEmoji('‚¨ÖÔ∏è'));
            await interaction.update({ embeds: [embed], components: [menu, backButton] });

        } else if (selectedValue === 'link_roles') {
            const roleTypeSelection = createRoleTypeSelection();
            await interaction.update(roleTypeSelection);
        }
    }
};