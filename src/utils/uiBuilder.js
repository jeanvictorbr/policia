import { EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle } from 'discord.js';
import { prisma } from './database.js';

// Fun√ß√£o auxiliar para formatar os valores (Canal ou Cargo)
const formatValue = (value, type = 'channel') => {
    if (!value) return '`‚ö´ N√£o definido`';
    return type === 'channel' ? `\`‚úÖ\` <#${value}>` : `\`‚úÖ\` <@&${value}>`;
};

// --- Dashboard Principal (Chamado pelo /painel_config) ---
export function createMainDashboard() {
    // ... (este c√≥digo continua o mesmo)
    const mainDashboard = new EmbedBuilder().setColor(0x2B2D31).setTitle('Dashboard de Gerenciamento | PoliceFlow').setDescription('Bem-vindo ao centro de controle. A partir daqui, voc√™ pode gerenciar todos os aspectos da sua fac√ß√£o de forma visual e intuitiva.').addFields({ name: 'Navega√ß√£o', value: '> Clique no bot√£o `M√≥dulos` para acessar e configurar todas as funcionalidades do bot.' }).setTimestamp().setFooter({ text: 'PoliceFlow - By Ze piqueno' });
    const actionRow = new ActionRowBuilder().addComponents(new ButtonBuilder().setCustomId('view_modules').setLabel('M√≥dulos').setStyle(ButtonStyle.Secondary).setEmoji('‚öôÔ∏è'));
    return { embeds: [mainDashboard], components: [actionRow], flags: [ 64 ] };
}

// --- Dashboard do M√≥dulo de ALISTAMENTO ---
export async function createRecruitmentDashboard(guildId) {
    const config = await prisma.guildConfig.findUnique({ where: { guild_id: guildId } }) || {};

    const embed = new EmbedBuilder()
        .setColor(0x1E90FF) // Azul "Dodger Blue"
        .setTitle('üìù M√≥dulo de Alistamento')
        .setDescription('Configure todos os aspectos do processo de recrutamento da sua fac√ß√£o. As altera√ß√µes s√£o refletidas em tempo real no dashboard.')
        .addFields(
            { name: 'Canal de An√°lises', value: formatValue(config.analysis_channel_id, 'channel'), inline: false },
            { name: 'Cargo de Recrutador', value: formatValue(config.recruiter_role_id, 'role'), inline: false },
            { name: 'Cargo de Aluno/Recruta Padr√£o', value: formatValue(config.recruit_role_id, 'role'), inline: false },
        )
        .setFooter({ text: 'PoliceFlow ‚Ä¢ Dashboard de M√≥dulo' });

    const row1 = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setCustomId(`set_config:analysis_channel_id`).setLabel('Definir Canal de An√°lises').setStyle(ButtonStyle.Secondary),
        new ButtonBuilder().setCustomId(`set_config:recruiter_role_id`).setLabel('Definir Cargo de Recrutador').setStyle(ButtonStyle.Secondary)
    );
    const row2 = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setCustomId(`set_config:recruit_role_id`).setLabel('Definir Cargo de Aluno').setStyle(ButtonStyle.Secondary)
    );
    const backButton = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setCustomId('view_modules').setLabel('Voltar para M√≥dulos').setStyle(ButtonStyle.Secondary).setEmoji('‚¨ÖÔ∏è')
    );

    return { embeds: [embed], components: [row1, row2, backButton] };
}

// --- Dashboard do M√≥dulo de CONFIGURA√á√ïES GERAIS ---
export async function createGeneralConfigDashboard(guildId) {
    const config = await prisma.guildConfig.findUnique({ where: { guild_id: guildId } }) || {};

    const embed = new EmbedBuilder()
        .setColor(0x99AAB5) // Cinza "Blurple"
        .setTitle('üõ†Ô∏è M√≥dulo de Configura√ß√µes Gerais')
        .setDescription('Configure op√ß√µes globais que afetam a apar√™ncia e o comportamento geral do bot.')
        .addFields(
            { name: 'üñºÔ∏è Logotipo/Banner', value: config.logo_url ? `[Ver Imagem](${config.logo_url})` : '`‚ö´ N√£o definido`', inline: false },
        )
        .setFooter({ text: 'PoliceFlow ‚Ä¢ Dashboard de M√≥dulo' });
        
    const row1 = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setCustomId(`set_config_modal:logo_url`).setLabel('Definir Logotipo/Banner').setStyle(ButtonStyle.Secondary)
    );
    const backButton = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setCustomId('view_modules').setLabel('Voltar para M√≥dulos').setStyle(ButtonStyle.Secondary).setEmoji('‚¨ÖÔ∏è')
    );
    
    return { embeds: [embed], components: [row1, backButton] };
}

// --- Dashboard do M√≥dulo de FARDAMENTOS ---
export async function createUniformsDashboard(guildId) {
    const kits = await prisma.uniformKit.findMany({
        where: { guild_id: guildId },
        orderBy: { name: 'asc' }
    });

    let kitList = kits.map((kit, index) => {
        return `\`${index + 1}.\` **${kit.name}**`;
    }).join('\n');

    if (kits.length === 0) {
        kitList = '> *Nenhum kit de fardamento foi criado ainda.*';
    }

    const embed = new EmbedBuilder()
        .setColor(0x718093) // Um cinza elegante
        .setTitle('üëï M√≥dulo de Fardamentos')
        .setDescription('Crie e gerencie os kits de fardas da sua fac√ß√£o. Os oficiais poder√£o visualizar os kits com o comando `/fardamentos`.')
        .addFields({ name: 'Kits Dispon√≠veis', value: kitList })
        .setFooter({ text: 'PoliceFlow ‚Ä¢ Dashboard de M√≥dulo' });

    const actionRow = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setCustomId('create_uniform_kit').setLabel('Criar Novo Kit').setStyle(ButtonStyle.Success).setEmoji('‚ûï'),
        new ButtonBuilder().setCustomId('delete_uniform_kit').setLabel('Deletar Kit').setStyle(ButtonStyle.Danger).setEmoji('üóëÔ∏è')
    );

    const backButton = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setCustomId('view_modules').setLabel('Voltar para M√≥dulos').setStyle(ButtonStyle.Secondary).setEmoji('‚¨ÖÔ∏è')
    );

    return { embeds: [embed], components: [actionRow, backButton] };
}
// --- Dashboard do M√≥dulo de PROMO√á√ïES (UPAMENTO) ---
export async function createPromotionsDashboard(guildId) {
    const config = await prisma.guildConfig.findUnique({ where: { guild_id: guildId } }) || {};

    const formatValue = (value, type = 'channel') => {
        if (!value) return '`‚ö´ N√£o definido`';
        return type === 'channel' ? `\`‚úÖ\` <#${value}>` : `\`‚úÖ\` <@&${value}>`;
    };

    const embed = new EmbedBuilder()
        .setColor(0xFFD700) // Dourado
        .setTitle('‚≠ê M√≥dulo de Promo√ß√µes (Upamento)')
        .setDescription('Configure os canais e cargos para o sistema de solicita√ß√£o de promo√ß√µes.')
        .addFields(
            { name: 'Canal de Solicita√ß√µes', value: formatValue(config.promotion_request_channel_id, 'channel'), inline: false },
            { name: 'Canal de Logs de Promo√ß√£o', value: formatValue(config.promotions_channel_id, 'channel'), inline: false },
            { name: 'Cargo que Aprova Promo√ß√µes', value: formatValue(config.promotion_approval_role_id, 'role'), inline: false }
        )
        .setFooter({ text: 'PoliceFlow ‚Ä¢ Dashboard de M√≥dulo' });

    const row1 = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setCustomId(`set_config:promotion_request_channel_id`).setLabel('Definir Canal de Solicita√ß√µes').setStyle(ButtonStyle.Secondary),
        new ButtonBuilder().setCustomId(`set_config:promotions_channel_id`).setLabel('Definir Canal de Logs').setStyle(ButtonStyle.Secondary)
    );
    const row2 = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setCustomId(`set_config:promotion_approval_role_id`).setLabel('Definir Cargo de Aprova√ß√£o').setStyle(ButtonStyle.Secondary)
    );
    const backButton = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setCustomId('view_modules').setLabel('Voltar para M√≥dulos').setStyle(ButtonStyle.Secondary).setEmoji('‚¨ÖÔ∏è')
    );

    return { embeds: [embed], components: [row1, row2, backButton] };
}