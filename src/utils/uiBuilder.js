import { EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle } from 'discord.js';
import { prisma } from './database.js';

// Fun√ß√£o que constr√≥i o Dashboard Principal
export function createMainDashboard() {
    const mainDashboard = new EmbedBuilder()
        .setColor(0x2B2D31)
        .setTitle('Dashboard de Gerenciamento | PoliceFlow')
        .setDescription('Bem-vindo ao centro de controle. A partir daqui, voc√™ pode gerenciar todos os aspectos da sua fac√ß√£o de forma visual e intuitiva.')
        .addFields({
            name: 'Navega√ß√£o',
            value: '> Clique no bot√£o `M√≥dulos` para acessar e configurar todas as funcionalidades do bot.'
        })
        .setTimestamp()
        .setFooter({ text: 'PoliceFlow - By Ze piqueno' });

    const actionRow = new ActionRowBuilder()
        .addComponents(
            new ButtonBuilder()
                .setCustomId('view_modules')
                .setLabel('M√≥dulos')
                .setStyle(ButtonStyle.Secondary)
                .setEmoji('‚öôÔ∏è')
        );
    
    return { embeds: [mainDashboard], components: [actionRow], flags: [ 64 ] }; // 64 = Ephemeral
}


// Fun√ß√£o que constr√≥i o Dashboard de Configura√ß√µes Gerais (j√° existente)
export async function createGeneralConfigDashboard(guildId) {
    const config = await prisma.guildConfig.findUnique({
        where: { guild_id: guildId },
    }) || {}; // Adiciona um objeto vazio para evitar erros se config for nulo

    const formatValue = (value, type = 'channel') => {
        if (!value) return '`N√£o definido`';
        return type === 'channel' ? `<#${value}>` : `<@&${value}>`;
    };

    const embed = new EmbedBuilder()
        .setColor(0x0099FF)
        .setTitle('üõ†Ô∏è Dashboard de Configura√ß√µes Gerais')
        .setDescription('Veja e altere as configura√ß√µes essenciais do bot para este servidor. As altera√ß√µes s√£o refletidas em tempo real.')
        .addFields(
            { name: 'Canal de An√°lises', value: formatValue(config.analysis_channel_id, 'channel'), inline: true },
            { name: 'Cargo de Recrutador', value: formatValue(config.recruiter_role_id, 'role'), inline: true },
            { name: 'Cargo de Aluno/Recruta', value: formatValue(config.recruit_role_id, 'role'), inline: true },
        )
        .setFooter({ text: 'PoliceFlow - By Ze piqueno' });

    const row1 = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setCustomId(`set_config:analysis_channel_id`).setLabel('Canal de An√°lises').setStyle(ButtonStyle.Secondary),
        new ButtonBuilder().setCustomId(`set_config:recruiter_role_id`).setLabel('Cargo Recrutador').setStyle(ButtonStyle.Secondary)
    );
    const row2 = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setCustomId(`set_config:recruit_role_id`).setLabel('Cargo Aluno').setStyle(ButtonStyle.Secondary)
    );
    const row3 = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setCustomId('view_modules').setLabel('Voltar para M√≥dulos').setStyle(ButtonStyle.Secondary).setEmoji('‚¨ÖÔ∏è')
    );

    return { embeds: [embed], components: [row1, row2, row3] };
}